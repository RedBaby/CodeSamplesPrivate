<?xml version="1.0" encoding="utf-8"?>
<s:View 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	
	implements="com.chattrspace.projects.mobilesingle.mvcs.view.components.IPhraseableUI"
	
	destructionPolicy="auto"
	
	initialize="_onInitialize(event)"
	creationComplete="_onCreationComplete(event)"
	
	>
	
	<fx:Script>
		<![CDATA[
			//--------------------------------------
			//  Imports
			//--------------------------------------
			import com.chattrspace.projects.mobilesingle.mvcs.model.vo.PhrasesVO;
			
			import mx.events.FlexEvent;
			
			import org.osflash.signals.Signal;
			import org.osflash.signals.natives.NativeSignal;
			
			import spark.events.ViewNavigatorEvent;
			
			//--------------------------------------
			//  Properties
			//--------------------------------------
			//PUBLIC GETTER/SETTERS
			/**
			 * Stores all the translation info. Nice and bindable
			 * 
			 */
			[Bindable]
			public function get phrasesVO() 						: PhrasesVO	 		{ return _phrasesVO; }
			public function set phrasesVO(aValue : PhrasesVO) 		: void 			{ 
				_phrasesVO = aValue; 
				_phrasesVOChanged.dispatch();
			}
			private var _phrasesVO : PhrasesVO;
			
			/**
			 *  Signal: Marks when the phrasesVO is updated. This is required by the IPhraseable interface
			 */		
			private var _phrasesVOChanged : Signal;
			public function get phrasesVOChanged () 				: Signal 	{ return _phrasesVOChanged; }
			
			
			//PUBLIC
			/**
			 * Signal: Marks the <code>ViewActivatedEvent</code>
			 * 
			 */	
			public var viewActivatedSignal : NativeSignal;
			
			/**
			 * Signal: Marks the button click
			 * 
			 */	
			public var backButtonClickedSignal : NativeSignal;
			
			/**
			 * Signal: Marks the button click
			 * 
			 */	
			public var settingsButtonClickedSignal : NativeSignal;

			//PUBLIC CONST
			
			//PRIVATE
			
			// --------------------------------------
			// Methods
			// --------------------------------------
			// PUBLIC
			
			// PRIVATE
			
			// --------------------------------------
			// Event Handlers
			// --------------------------------------
			/**
			 * Handles the Event: <code>ViewNavigatorEvent.VIEW_ACTIVATE</code>.
			 * 
			 * @param aEvent <code>ViewNavigatorEvent</code> The incoming aEvent payload.
			 *  
			 * @return void
			 * 
			 */
			protected function _onInitialize(event:FlexEvent):void
			{
				//
				viewActivatedSignal 			= new NativeSignal 	(this, 				ViewNavigatorEvent.VIEW_ACTIVATE, 	spark.events.ViewNavigatorEvent);
				backButtonClickedSignal 		= new NativeSignal 	(back_button, 		MouseEvent.CLICK, 					MouseEvent);
				settingsButtonClickedSignal 	= new NativeSignal 	(settings_button, 	MouseEvent.CLICK, 					MouseEvent);
				_phrasesVOChanged				= new Signal ();
				
			}
			
			/**
			 * Handles the aEvent: <code>FlexEvent.CREATION_COMPLETE</code>.
			 * 
			 * @param aEvent <code>FlexEvent</code> The incoming aEvent payload.
			 *  
			 * @return void
			 * 
			 */
			protected function _onCreationComplete(aEvent : FlexEvent) : void
			{
				//	OVERRIDE AS NEEDED
				
			}

			
		]]>
	</fx:Script>
	
	<fx:Declarations>

	</fx:Declarations>
	
	<!-- Layout -->
	
	<!-- Place any UI components here. -->	
	<s:layout>
		<s:VerticalLayout
			paddingTop		=	"10"
			paddingLeft		=	"10"
			paddingRight	=	"10"
			paddingBottom	=	"10"
			/>
	</s:layout>
	
	<s:navigationContent>
		<s:Button id = "back_button" 		label = "{phrasesVO.backButtonLabel}"		/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id = "settings_button" 	label = "{phrasesVO.settingsButtonLabel}" 	/>
	</s:actionContent>
	
</s:View>
